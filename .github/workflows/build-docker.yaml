name: Deploy to Azure Container Instance

on:
  push:
    branches: [main]
  workflow_dispatch:

env:
  AZURE_CONTAINER_REGISTRY: tascaAndreu
  CONTAINER_INSTANCE_NAME: tascaandreu
  RESOURCE_GROUP: DefaultResourceGroup-ESC
  REGION: eastus
  IMAGE_TAG: ${{ github.sha }}

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      # Instalar Docker Compose
      - name: Install Docker Compose
        run: sudo apt-get update && sudo apt-get install -y docker-compose

      # Convierte el nombre del ACR a minúsculas y lo guarda en GITHUB_ENV
      - name: Convert ACR name to lowercase
        run: echo "AZURE_CONTAINER_REGISTRY_LOWER=$(echo $AZURE_CONTAINER_REGISTRY | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV

      # Configura Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Login en Azure
      - name: Log in to Azure
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      # Login en ACR
      - name: Log in to ACR
        run: az acr login --name ${{ env.AZURE_CONTAINER_REGISTRY_LOWER }}

      # Reemplaza la imagen en docker-compose.yaml con la imagen subida a ACR
      - name: Update docker-compose.yaml with ACR image
        run: |
          sed -i 's|image: .*|image: ${{ env.AZURE_CONTAINER_REGISTRY_LOWER }}.azurecr.io/${{ env.CONTAINER_INSTANCE_NAME }}:${{ env.IMAGE_TAG }}|' docker-compose.yaml

      # Construye y sube todas las imágenes con docker-compose
      - name: Build and push images using docker-compose
        run: |
          docker-compose -f docker-compose.yaml build
          docker-compose -f docker-compose.yaml push

      # Verificar si la imagen se subió correctamente
      - name: Verify image in ACR
        run: |
          az acr repository show-tags --name ${{ env.AZURE_CONTAINER_REGISTRY_LOWER }} --repository ${{ env.CONTAINER_INSTANCE_NAME }}

      # Desplegar en Azure Container Instance usando la imagen de ACR
      - name: Deploy to Azure Container Instance
        run: |
          az container create \
            --name ${{ env.CONTAINER_INSTANCE_NAME }} \
            --resource-group ${{ env.RESOURCE_GROUP }} \
            --image ${{ env.AZURE_CONTAINER_REGISTRY_LOWER }}.azurecr.io/${{ env.CONTAINER_INSTANCE_NAME }}:${{ env.IMAGE_TAG }} \
            --cpu 1 --memory 1 \
            --os-type Linux \
            --environment-variables SPRING_PROFILES_ACTIVE=prod \
            --registry-login-server ${{ env.AZURE_CONTAINER_REGISTRY_LOWER }}.azurecr.io \
            --registry-username ${{ secrets.AZURE_REGISTRY_USERNAME }} \
            --registry-password ${{ secrets.AZURE_REGISTRY_PASSWORD }} \
            --location ${{ env.REGION }} \
            --dns-name-label ${{ env.CONTAINER_INSTANCE_NAME }} \
            --ports 80 8080
