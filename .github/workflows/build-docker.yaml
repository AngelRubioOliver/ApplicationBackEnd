name: Deploy to Azure Container App

on:
  push:
    branches: [main]
  workflow_dispatch:

env:
  AZURE_CONTAINER_REGISTRY: tascaAndreu
  CONTAINER_APP_NAME: tascaandreu
  RESOURCE_GROUP: DefaultResourceGroup-ESC
  REGION: eastus
  IMAGE_TAG: ${{ github.sha }}
  CONTAINER_APP_ENVIRONMENT: my-container-app-env  # Nombre del entorno de Container Apps

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      # Configura Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Login en Azure
      - name: Log in to Azure
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      # Convertir nombre del ACR a minúsculas
      - name: Convert ACR name to lowercase
        run: echo "AZURE_CONTAINER_REGISTRY_LOWER=$(echo '${{ env.AZURE_CONTAINER_REGISTRY }}' | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV

      # Login en ACR
      - name: Log in to ACR
        run: |
          az acr login --name ${{ env.AZURE_CONTAINER_REGISTRY_LOWER }} --expose-token
          echo "${{ secrets.AZURE_REGISTRY_PASSWORD }}" | docker login ${{ env.AZURE_CONTAINER_REGISTRY_LOWER }}.azurecr.io \
            -u ${{ secrets.AZURE_REGISTRY_USERNAME }} \
            --password-stdin

      # Construir y subir la imagen
      - name: Build and push Docker image
        run: |
          docker build -t ${{ env.AZURE_CONTAINER_REGISTRY_LOWER }}.azurecr.io/${{ env.CONTAINER_APP_NAME }}:${{ env.IMAGE_TAG }} .
          docker push ${{ env.AZURE_CONTAINER_REGISTRY_LOWER }}.azurecr.io/${{ env.CONTAINER_APP_NAME }}:${{ env.IMAGE_TAG }}

      # Verificar la imagen en ACR
      - name: Verify image in ACR
        run: |
          az acr repository show-tags --name ${{ env.AZURE_CONTAINER_REGISTRY_LOWER }} --repository ${{ env.CONTAINER_APP_NAME }}

      # Crear el entorno de Container Apps si no existe
      - name: Create Container Apps environment
        run: |
          az containerapp env show \
            --name ${{ env.CONTAINER_APP_ENVIRONMENT }} \
            --resource-group ${{ env.RESOURCE_GROUP }} || \
          az containerapp env create \
            --name ${{ env.CONTAINER_APP_ENVIRONMENT }} \
            --resource-group ${{ env.RESOURCE_GROUP }} \
            --location ${{ env.REGION }}

      # Desplegar en Azure Container App
      - name: Deploy to Azure Container App
        run: |
          # Crear o actualizar la Container App
          az containerapp create \
            --name ${{ env.CONTAINER_APP_NAME }} \
            --resource-group ${{ env.RESOURCE_GROUP }} \
            --environment ${{ env.CONTAINER_APP_ENVIRONMENT }} \
            --image ${{ env.AZURE_CONTAINER_REGISTRY_LOWER }}.azurecr.io/${{ env.CONTAINER_APP_NAME }}:${{ env.IMAGE_TAG }} \
            --target-port 8080 \
            --ingress external \
            --registry-server ${{ env.AZURE_CONTAINER_REGISTRY_LOWER }}.azurecr.io \
            --registry-username ${{ secrets.AZURE_REGISTRY_USERNAME }} \
            --registry-password ${{ secrets.AZURE_REGISTRY_PASSWORD }} \
            --env-vars SPRING_PROFILES_ACTIVE=prod \
            --query properties.configuration.ingress.fqdn

      # Mostrar información de la aplicación
      - name: Show Container App info
        run: |
          az containerapp show \
            --name ${{ env.CONTAINER_APP_NAME }} \
            --resource-group ${{ env.RESOURCE_GROUP }} \
            --query "{name:name, state:properties.provisioningState, fqdn:properties.configuration.ingress.fqdn, revision:properties.latestRevisionName}" \
            --output table