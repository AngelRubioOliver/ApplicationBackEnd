name: Deploy to Azure Container Instance - Fixed Version

on:
  push:
    branches: [main]
  workflow_dispatch:

env:
  AZURE_CONTAINER_REGISTRY: tascaAndreu
  CONTAINER_INSTANCE_NAME: tascaandreu
  RESOURCE_GROUP: DefaultResourceGroup-ESC
  REGION: eastus
  IMAGE_TAG: ${{ github.sha }}
  APP_PORT: 8080

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Azure
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Convert ACR name to lowercase
        run: echo "AZURE_CONTAINER_REGISTRY_LOWER=$(echo '${{ env.AZURE_CONTAINER_REGISTRY }}' | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV

      - name: Build and push Docker image
        run: |
          docker build -t ${{ env.AZURE_CONTAINER_REGISTRY_LOWER }}.azurecr.io/${{ env.CONTAINER_INSTANCE_NAME }}:${{ env.IMAGE_TAG }} .
          echo "${{ secrets.AZURE_REGISTRY_PASSWORD }}" | docker login ${{ env.AZURE_CONTAINER_REGISTRY_LOWER }}.azurecr.io -u ${{ secrets.AZURE_REGISTRY_USERNAME }} --password-stdin
          docker push ${{ env.AZURE_CONTAINER_REGISTRY_LOWER }}.azurecr.io/${{ env.CONTAINER_INSTANCE_NAME }}:${{ env.IMAGE_TAG }}

      - name: Deploy to Azure Container Instance
        run: |
          az container delete \
            --name ${{ env.CONTAINER_INSTANCE_NAME }} \
            --resource-group ${{ env.RESOURCE_GROUP }} \
            --yes || true

          az container create \
            --name ${{ env.CONTAINER_INSTANCE_NAME }} \
            --resource-group ${{ env.RESOURCE_GROUP }} \
            --image ${{ env.AZURE_CONTAINER_REGISTRY_LOWER }}.azurecr.io/${{ env.CONTAINER_INSTANCE_NAME }}:${{ env.IMAGE_TAG }} \
            --cpu 2 \
            --memory 3 \
            --os-type Linux \
            --environment-variables SPRING_PROFILES_ACTIVE=prod \
            --registry-login-server ${{ env.AZURE_CONTAINER_REGISTRY_LOWER }}.azurecr.io \
            --registry-username ${{ secrets.AZURE_REGISTRY_USERNAME }} \
            --registry-password ${{ secrets.AZURE_REGISTRY_PASSWORD }} \
            --location ${{ env.REGION }} \
            --ports ${{ env.APP_PORT }} \
            --ip-address Public \
            --restart-policy OnFailure \
            --command-line "sh -c 'java -Xms512m -Xmx2048m -Dserver.port=${{ env.APP_PORT }} -Dserver.address=0.0.0.0 -jar /app.jar'" \
            --dns-name-label ${{ env.CONTAINER_INSTANCE_NAME }}-${{ github.run_id }}

      - name: Full Container Diagnostics
        run: |
          echo "=== Container Details ==="
          az container show \
            --name ${{ env.CONTAINER_INSTANCE_NAME }} \
            --resource-group ${{ env.RESOURCE_GROUP }} \
            --query "{ProvisioningState:provisioningState, State:instanceView.state, FQDN:ipAddress.fqdn, IP:ipAddress.ip, Ports:ipAddress.ports}" \
            --output table

          echo "\n=== Container Logs ==="
          az container logs \
            --name ${{ env.CONTAINER_INSTANCE_NAME }} \
            --resource-group ${{ env.RESOURCE_GROUP }}

          echo "\n=== Network Test ==="
          FQDN=$(az container show \
            --name ${{ env.CONTAINER_INSTANCE_NAME }} \
            --resource-group ${{ env.RESOURCE_GROUP }} \
            --query "ipAddress.fqdn" -o tsv)
          
          echo "Testing connection to: http://$FQDN:${{ env.APP_PORT }}/actuator/health"
          curl -v --retry 3 --retry-delay 5 --max-time 10 "http://$FQDN:${{ env.APP_PORT }}/actuator/health" || echo "Connection failed"

          echo "\n=== Port Check ==="
          nc -zv $FQDN ${{ env.APP_PORT }} || echo "Port check failed"